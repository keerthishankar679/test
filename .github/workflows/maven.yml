# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GIThub actions Maven build example
# Environmental Variabless
env:
  STACK: Java
  BUILD_TECH: java_maven
  CONTINUE_ON_ERROR: true
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0
  
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    #Code Checkout#
    
    - name: ' Checkout repository on branch: ${{ github.REF }}'
      uses: actions/checkout@v2
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        ref: ${{ github.REF }}
        fetch-depth: 0
      
    - name: Step 2 - Set up JDK 11
      id: setup_jdk
      if: ${{env.STACK == 'java'}}
      uses: actions/setup-java@v2
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=keerthishankar679_keerthishankar679
          cd target
          ls -a
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
          name: artifact
          path: ${{Github.workspace}}//target/*.jar
          
    ######## JUnit Test with Maven ########

    - name: Test with Maven
      run: mvn -B test --file pom.xml
  
  ####  Jacoco code Coverage report #######
  
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"     
   
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
        
    - name: Docker setup
      uses: docker/setup-buildx-action@v1
        
   ## - name: Build and Publish Docker Image
    ##  uses: docker/docker-build-push@v1
    ##  with:
     ##   username: ${{ secrets.DOCKER_USERNAME }}
     ##   password: ${{ secrets.DOCKER_PASSWORD }}
      ##  registry: keerthishankar679/demo-app
      ##  tags: latest
      
   
    
    
    - name: Login to the registry 
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
    - name: Build and push the image
      uses: docker/build-push-action@v2
      with:
            context: .
            push: true
            tags: keerthishankar679/demo-app:myalpinetag
